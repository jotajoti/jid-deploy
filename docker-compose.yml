version: "3.9"

services:
    jid-server:
        image: jotajoti/jid-server:latest
        ports:
            - "8080"
        labels:
            traefik.enable: "true"
            traefik.http.routers.jid-server.entrypoints: web
            traefik.http.routers.jid-server.rule: Host(`${API_SERVER_DOMAIN}`)
            traefik.http.services.jid-server.loadbalancer.server.port: 8080
        environment:
            - database=/usr/src/app/data/jiddata.db
        volumes:
            - ./data/:/usr/src/app/data/
    jid-ui:
        image: jotajoti/jid-ui:latest
        ports:
            - "80"
        labels:
            traefik.enable: "true"
            traefik.http.routers.jid-ui.entrypoints: web
            traefik.http.routers.jid-ui.rule: Host(`${UI_SERVER_DOMAIN}`)
            traefik.http.services.jid-ui.loadbalancer.server.port: 80
        environment:
            - API_SERVER=${API_SERVER_URL}
    gateway:
        image: traefik:v2.5
        depends_on:
            - jid-server
            - jid-ui
        # Enables the web UI and tells Traefik to listen to docker
        command:
            - --api.dashboard=true
            - --api.insecure=true
            - --entrypoints.web.address=:80
            - --providers.docker.exposedbydefault=false
            - --providers.docker=true
        ports:
            # The HTTP port
            - "80:80"
            # The Web UI (enabled by --api.insecure=true)
            - "8080:8080"
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock
            
